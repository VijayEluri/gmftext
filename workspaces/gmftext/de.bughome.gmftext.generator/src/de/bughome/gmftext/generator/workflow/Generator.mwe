<!--
 * Copyright 2009 Markus Pielmeier
 *
 * This file is part of gmftext.
 *
 * gmftext is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * gmftext is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with gmftext.  If not, see <http://www.gnu.org/licenses/>.
-->

<workflow>
	<property name="modelUri" />

	<bean class="org.eclipse.emf.mwe.utils.StandaloneSetup" platformUri=".."/>
	
	<component class="org.eclipse.emf.mwe.utils.DirectoryCleaner" directory="src-gen"/>
	
	<component class="org.eclipse.xtext.MweReader" uri="${modelUri}">
		<!-- this class will be generated by the xtext generator -->
		<register class="de.bughome.GmfTextStandaloneSetup"/>
	</component>
	
	 <!--============================================================
	 	transform all models
	 -->
	 <component class="org.eclipse.xtend.XtendComponent">
	 	<metaModel class="org.eclipse.xtend.typesystem.emf.EmfMetaModel">
	 		<metaModelPackage value="de.bughome.gmfText.GmfTextPackage" />
	 	</metaModel>
	 	<metaModel class="org.eclipse.xtend.typesystem.emf.EmfMetaModel">
	 		<metaModelPackage value="org.eclipse.gmf.tooldef.GMFToolPackage" />
	 	</metaModel>
	 
		<invoke value="de::bughome::gmftext::generator::template::gmftool::GMFToolConvert::toToolRegistry(model)"/>
		<outputSlot value="gmfToolModel" />
	</component>
	
	 <component class="org.eclipse.xtend.XtendComponent">
	 	<metaModel class="org.eclipse.xtend.typesystem.emf.EmfMetaModel">
	 		<metaModelPackage value="de.bughome.gmfText.GmfTextPackage" />
	 	</metaModel>
	 	<metaModel class="org.eclipse.xtend.typesystem.emf.EmfMetaModel">
	 		<metaModelPackage value="org.eclipse.gmf.gmfgraph.GMFGraphPackage" />
	 	</metaModel>
	 
		<invoke value="de::bughome::gmftext::generator::template::gmfgraph::GMFGraphConvert::toCanvas(model)"/>
		<outputSlot value="gmfGraphModel" />
	</component>
	
	 <component class="org.eclipse.xtend.XtendComponent">
	 	<metaModel class="org.eclipse.xtend.typesystem.emf.EmfMetaModel">
	 		<metaModelPackage value="de.bughome.gmfText.GmfTextPackage" />
	 	</metaModel>
	 	<metaModel class="org.eclipse.xtend.typesystem.emf.EmfMetaModel">
	 		<metaModelPackage value="org.eclipse.gmf.tooldef.GMFToolPackage" />
	 	</metaModel>
	 	<metaModel class="org.eclipse.xtend.typesystem.emf.EmfMetaModel">
	 		<metaModelPackage value="org.eclipse.gmf.gmfgraph.GMFGraphPackage" />
	 	</metaModel>
	 	<metaModel class="org.eclipse.xtend.typesystem.emf.EmfMetaModel">
	 		<metaModelPackage value="org.eclipse.gmf.mappings.GMFMapPackage" />
	 	</metaModel>
	 
		<invoke value="de::bughome::gmftext::generator::template::gmfmap::GMFMapConvert::toMapping(model, gmfToolModel, gmfGraphModel)"/>
		<outputSlot value="gmfMapModel" />
	</component>
	
	 <!--============================================================
	 	serialize all models
	 -->
	<component class="org.eclipse.emf.mwe.utils.Writer">
		<uri value="src-gen/model/GmfTool.gmftool" />
		<modelSlot value="gmfToolModel" />
	</component>

	<component class="org.eclipse.emf.mwe.utils.Writer">
		<uri value="src-gen/model/GmfGraph.gmfgraph" />
		<modelSlot value="gmfGraphModel" />
	</component>
	
	<component class="org.eclipse.emf.mwe.utils.Writer">
		<uri value="src-gen/model/GmfMap.gmfmap" />
		<modelSlot value="gmfMapModel" />
	</component>
	
	<!--
	<component class="org.eclipse.xpand2.Generator">
		<metaModel class="org.eclipse.xtend.typesystem.emf.EmfRegistryMetaModel"/>
		<fileEncoding value="UTF-8"/>
		<expand value="templates::Template::main FOR model"/>
		<genPath value="src-gen"/>
	</component>
	-->
</workflow>
