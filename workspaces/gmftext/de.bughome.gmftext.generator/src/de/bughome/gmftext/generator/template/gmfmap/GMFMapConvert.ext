/*
 * Copyright 2009 Markus Pielmeier
 *
 * This file is part of gmftext.
 *
 * gmftext is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * gmftext is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with gmftext.  If not, see <http://www.gnu.org/licenses/>.
 */

import tooldef;
import gmfgraph;
import mappings;
import gmfText;

extension de::bughome::gmftext::generator::template::gmftool::GMFToolConvert;

create Mapping toMapping(gmfText::Model model, tooldef::ToolRegistry toolRegistry, gmfgraph::Canvas canvas):
	setDiagram(toCanvasMapping(model, toolRegistry, canvas)) ->
	model.elements.typeSelect(gmfText::Node).forAll(n | nodes.add(toTopNodeReference(n, toolRegistry)));

create mappings::CanvasMapping toCanvasMapping(gmfText::Model model, tooldef::ToolRegistry toolRegistry, gmfgraph::Canvas canvas):
	setPalette(toolRegistry.palette) ->
	setDiagramCanvas(canvas) ->
	setDomainModel(model.container.domainModel) ->
	setDomainMetaElement(model.container.element);

create mappings::TopNodeReference toTopNodeReference(gmfText::Node node, tooldef::ToolRegistry toolRegistry):
	setUpBinding(this, node.binding) ->
	setOwnedChild(toNodeMapping(node, node.binding, toolRegistry));
	
void setUpBinding(mappings::TopNodeReference topNodeReference, gmfText::ClassNodeBinding binding):
	topNodeReference.setContainmentFeature(binding.containmentFeature);

create mappings::NodeMapping toNodeMapping(gmfText::Node node, gmfText::ClassNodeBinding binding, tooldef::ToolRegistry toolRegistry):
	setDomainMetaElement(binding.ecoreClass) ->
	(let creationTool = toCreationTool(node.name, "Creates a new " + node.name):
		toolRegistry.palette.tools.add(creationTool) ->
		setTool(creationTool));
