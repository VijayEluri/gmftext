/*
 * Copyright 2009 Markus Pielmeier
 *
 * This file is part of gmftext.
 *
 * gmftext is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * gmftext is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with gmftext.  If not, see <http://www.gnu.org/licenses/>.
 */

import gmfgraph;
import gmfText;

create Canvas toCanvas(Model model):
	setName("Default") ->
	figures.add(toFigureGallery(this, model));
	
create FigureGallery toFigureGallery(Canvas c, Model model):
	setName("Default") ->
	model.elements.forAll(t | createFigure(c, this, t));

Void createFigure(Canvas c, FigureGallery fg, Type t):
	let fd = toFigureDescriptor(t):
		fg.descriptors.add(fd) ->
		fd.setActualFigure(toFigure(t)) ->
		c.nodes.add(toAnchor(t, fd));

create FigureDescriptor toFigureDescriptor(Type t):
	setName(t.name + 'Figure');

create RoundedRectangle toFigure(gmfText::Node node):
	setName(node.name + 'Figure');

create gmfgraph::Node toAnchor(gmfText::Node node, FigureDescriptor fd):
	setName(node.name) ->
	setFigure(fd);
